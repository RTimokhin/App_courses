const path = require('path'); //подключаем модуль для работы с путями
const fs = require('fs'); //подключаем модуль для работы с фаловой системой

//зададим путь, который в дальнейшем будем использовать
const p = path.join(
  path.dirname(process.mainModule.filename),
  'data',
  'card.JSON'
)

class Card {
  static async add(course) {
    const card = await Card.fetch(); //получим все данные корзины

    //получим из массива индекс курса, который добавляем в корзину
    const idx = card.courses.findIndex(c => c.id === course.id);
    const candidate = card.courses[idx]; //проверим существует ли такой курс
    if(candidate) { //если курс в корзине есть
      candidate.count++; //увеличиваем количество курсов на единицу
      card.coursesidx = candidate;
    } else {
      course.count = 1; //иначе, устанавливаем значение купленных курсов равным 1
      card.courses.push(course); //добавляем курс в корзину
    }
    card.price += +course.price //вычислим общую сумму добавленных в корзину курсов

    return new Promise( (res, req) => {
      fs.writeFile(p, JSON.stringify(card), err => { //запишем данные в файл
        if(err) {
          reject(err);
        } else {
          resolve();
        }
      })
    })
  }

  static async fetch() {
    return new Promise( (resolve, reject) => {
      fs.readFile(p, 'utf-8', (err, content) => { //считаем данные из файла
        if(err) {
          reject(err); //если есть ошибка, выведем её в консоль
        } else {
          resolve(JSON.parse(content)); //преобразуем JSON в объект
        }
      })
    })
  }
}

module.expors = router; //экспортируем данный модуль
